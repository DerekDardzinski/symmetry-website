import {
  axisRotations,
  planeRotations,
  pColor,
  rotColor,
  axColor,
} from "../../build/AxesProps";

const tetragonalAxes = {
  _4ommm: {
    x: {
      rotationSym: 2,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: true,
    },
    y: {
      rotationSym: 2,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.four],
      hasPlane: true,
    },
    z: {
      rotationSym: 2,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: true,
    },
  },
  _4bar2m: {
    x: {
      rotationSym: 1,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.four],
      hasPlane: false,
    },
    y: {
      rotationSym: 1,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.four],
      hasPlane: false,
    },
    z: {
      rotationSym: 2,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.fourdu, planeRotations.fourdd],
      hasPlane: true,
    },
  },
  _4mm: {
    x: {
      rotationSym: 1,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: false,
    },
    y: {
      rotationSym: 1,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.four],
      hasPlane: true,
    },
    z: {
      rotationSym: 4,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: true,
    },
  },
  _422: {
    x: {
      rotationSym: 2,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    y: {
      rotationSym: 2,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    z: {
      rotationSym: 4,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    xy: {
      rotationSym: 2,
      axisRotation: axisRotations.xy,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    nxy: {
      rotationSym: 2,
      axisRotation: axisRotations.nxy,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
  },
  _4om: {
    x: {
      rotationSym: 1,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: true,
    },
    y: {
      rotationSym: 1,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.four],
      hasPlane: false,
    },
    z: {
      rotationSym: 4,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [planeRotations.two],
      hasPlane: false,
    },
  },
  _4bar: {
    x: {
      rotationSym: 1,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    y: {
      rotationSym: 1,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    z: {
      rotationSym: 4,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
  },
  _4: {
    x: {
      rotationSym: 1,
      axisRotation: axisRotations.x,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    y: {
      rotationSym: 1,
      axisRotation: axisRotations.y,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
    z: {
      rotationSym: 4,
      axisRotation: axisRotations.z,
      rotationColor: rotColor,
      planeColor: pColor,
      axisColor: axColor,
      planes: [],
      hasPlane: false,
    },
  },
};

export default tetragonalAxes;
